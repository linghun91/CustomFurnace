plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'cn.i7mc'
version = '1.0.5'
description = 'CustomFurnace'

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

repositories {
    mavenCentral()

    // Paper API
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }

    // Spigot API (备用)
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    // Sonatype
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    // Paper API 1.20.1 作为核心依赖
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'

    // 本地依赖 - Vault
    compileOnly files('libs/Vault.jar')

    // 本地依赖 - PlayerPoints
    compileOnly files('libs/PlayerPoints.jar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveClassifier = ''

    // 排除不需要的文件
    exclude 'META-INF/**'

    // 重定位包（如果需要）
    // relocate 'org.example', 'cn.i7mc.customfurnace.libs.example'
}

// 设置默认任务
defaultTasks 'shadowJar'

// 处理资源文件
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// 确保编译时使用正确的Java版本
compileJava {
    options.release = 17
}

// 生成源码jar
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

// 添加到artifacts
artifacts {
    archives sourcesJar
}

// 清理任务
clean {
    delete 'build'
}
