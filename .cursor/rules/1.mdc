---
description: 
globs: 
alwaysApply: true
---
任何情况下都保持注意以下几点全局规则
1.全程中文回答,每步操作不需要过多冗余操作,除非是我要求否则不需要每步操作都增加调试信息!.不要擅自添加调试信息,除非我明确要求!
2.任何情况下都不要用类似需要硬编码处理或映射某个功能的方法,因为麻烦且无法兼容后续同类问题不同名字的情况,必须考虑到灵活兼容而使用简单的全局自动动态适配方法!
3.一切关于项目插件输出的字符串都在message.yml里可自定义,而不是硬编码!   如果是debug输出 则在debugmessage.yml里面自定义,注意除非明确要求你,否则不要擅自添加调试信息!!!
4.任何新功能类和新方法都不要使用反射 而是先查阅官方API文档,或README.md开发文档中提及的API地址!中正确方法 直接调用!
5.不要擅自添加调试信息,只有当我要求添加调试信息输出 , 那么每一条调试信息必须遵循判断配置文件config.yml 的debug: true/false!
6.任何相同方法遵循调用统一方法原则,避免重复造轮子,例如一个示例情况"当我命令实现了一个让玩家回血效果,那么同项目内如果GUI也需要添加一个点击回血效果必须遵循用 之前命令相同的方法,而不是重复造一个方法!"
7.如有出现相似方法 全部遵循类似第6条规则 即一切方法遵循统一优先原则, 比如有2个硬编码内容"'点击按钮后购买该物品',有一个相似功能的但是由指令触发的'输入指令后购买该物品'"的情况全部遵循统一优先原则来处理硬编码字符串 而不是用两种分别不同的方法 来处理两种输出硬编码内容,以及例如3个不同的GUI需要处理显示LORE添加信息,不要创建三处不同的GUI位置 且创建三个不同的LORE处理方法, 而是统一一个GUI方法处理 统一一个LORE处理方法,以上这些例子只是示例实际表达的意图是更多类型情况都要遵循统一优先原则
8.在你创建任何新类之前,必须先查看项目目录内是有已经有同样或相似的类!避免重复创建!
9.遵循全部规则是为了让代码优美,可维护,简约,便捷兼容性高,后续开发添加功能方便!
10.关于GUI方法全部统一使用该文档页面"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/inventory/InventoryHolder.html"的方法
11.所有关于Minecraft 1.21.4开发的项目一切API和方法优先从"https://hub.spigotmc.org/javadocs/spigot/index.html" 和"https://jd.papermc.io/paper/1.21.4/" 这两个官方API页面中获取
12.你深度理解我的表达意图规则后开始全局遵循
13.在解决任何编译器警告和错误前必须查阅关联类或代码的原始方法后再使用正确参数或名称解决,否则会报错越修越乱!